import ColorMixin from '../../../services/color-config/ColorMixin';
import { StatefulMixin } from '../../vuestic-mixins/StatefulMixin/StatefulMixin';
declare class PaginationProps {
    modelValue: import("vue-class-component").WithDefault<number>;
    visiblePages: import("vue-class-component").WithDefault<number>;
    pages: import("vue-class-component").WithDefault<number>;
    disabled: import("vue-class-component").WithDefault<boolean>;
    color: import("vue-class-component").WithDefault<string>;
    size: import("vue-class-component").WithDefault<string>;
    boundaryLinks: import("vue-class-component").WithDefault<boolean>;
    boundaryNumbers: import("vue-class-component").WithDefault<boolean>;
    directionLinks: import("vue-class-component").WithDefault<boolean>;
    input: import("vue-class-component").WithDefault<boolean>;
    hideOnSinglePage: import("vue-class-component").WithDefault<boolean>;
    flat: import("vue-class-component").WithDefault<boolean>;
    total: import("vue-class-component").WithDefault<number>;
    pageSize: import("vue-class-component").WithDefault<number>;
    boundaryIconLeft: import("vue-class-component").WithDefault<string>;
    boundaryIconRight: import("vue-class-component").WithDefault<string>;
    directionIconLeft: import("vue-class-component").WithDefault<string>;
    directionIconRight: import("vue-class-component").WithDefault<string>;
}
declare const VaPagination_base: import("vue-class-component").VueConstructor<ColorMixin & StatefulMixin & {
    $: import("vue").ComponentInternalInstance;
    $data: {};
    $props: Partial<{}> & Omit<import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, never>;
    $attrs: {
        [x: string]: unknown;
    };
    $refs: {
        [x: string]: unknown;
    };
    $slots: Readonly<{
        [name: string]: import("vue").Slot | undefined;
    }>;
    $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $emit: (event: string, ...args: any[]) => void;
    $el: any;
    $options: import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>;
    $forceUpdate: import("vue").ReactiveEffect<any>;
    $nextTick: typeof import("vue").nextTick;
    $watch(source: string | Function, cb: Function, options?: import("vue").WatchOptions<boolean> | undefined): import("vue").WatchStopHandle;
} & import("vue").ShallowUnwrapRef<{}> & {} & {} & import("vue").ComponentCustomProperties & import("vue-class-component").ClassComponentHooks & {
    $: import("vue").ComponentInternalInstance;
    $data: {};
    $props: Partial<import("vue-class-component").ExtractDefaultProps<PaginationProps>> & Omit<import("vue-class-component").ExtractProps<PaginationProps> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, import("vue-class-component").DefaultKeys<PaginationProps>>;
    $attrs: {
        [x: string]: unknown;
    };
    $refs: {
        [x: string]: unknown;
    };
    $slots: Readonly<{
        [name: string]: import("vue").Slot | undefined;
    }>;
    $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $emit: (event: string, ...args: any[]) => void;
    $el: any;
    $options: import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>;
    $forceUpdate: import("vue").ReactiveEffect<any>;
    $nextTick: typeof import("vue").nextTick;
    $watch(source: string | Function, cb: Function, options?: import("vue").WatchOptions<boolean> | undefined): import("vue").WatchStopHandle;
} & import("vue-class-component").ExtractProps<PaginationProps>>;
export default class VaPagination extends VaPagination_base {
    inputValue: string;
    readonly htmlInput: HTMLInputElement;
    created(): void;
    get lastPage(): number;
    get paginationRange(): (number | "...")[];
    get showBoundaryLinks(): boolean | 0 | undefined;
    get showDirectionLinks(): boolean | 0 | undefined;
    get showPagination(): boolean;
    get fontColor(): string;
    get useTotal(): boolean;
    get currentValue(): any;
    set currentValue(value: any);
    focusInput(): void;
    onUserInput(pageNum: number): void;
    resetInput(): void;
    changeValue(): void;
    activeButtonStyle(buttonValue: number): {
        backgroundColor: string;
        color: string;
    } | {
        color: string;
        backgroundColor?: undefined;
    };
}
export {};
