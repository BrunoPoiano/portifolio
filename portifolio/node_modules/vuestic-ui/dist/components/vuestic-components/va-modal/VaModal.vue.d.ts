import ColorMixin from '../../../services/color-config/ColorMixin';
import { StatefulMixin } from '../../vuestic-mixins/StatefulMixin/StatefulMixin';
import ClickOutsideMixin from '../../vuestic-mixins/ClickOutsideMixin/ClickOutsideMixin';
declare class ModalProps {
    modelValue: import("vue-class-component").WithDefault<boolean>;
    title: import("vue-class-component").WithDefault<string>;
    message: import("vue-class-component").WithDefault<string>;
    okText: import("vue-class-component").WithDefault<string>;
    cancelText: import("vue-class-component").WithDefault<string>;
    hideDefaultActions: import("vue-class-component").WithDefault<boolean>;
    fullscreen: import("vue-class-component").WithDefault<boolean>;
    mobileFullscreen: import("vue-class-component").WithDefault<boolean>;
    noDismiss: import("vue-class-component").WithDefault<boolean>;
    noOutsideDismiss: import("vue-class-component").WithDefault<boolean>;
    noEscDismiss: import("vue-class-component").WithDefault<boolean>;
    maxWidth: import("vue-class-component").WithDefault<string>;
    maxHeight: import("vue-class-component").WithDefault<string>;
    size: import("vue-class-component").WithDefault<string>;
    fixedLayout: import("vue-class-component").WithDefault<boolean>;
    withoutTransitions: import("vue-class-component").WithDefault<boolean>;
    overlay: import("vue-class-component").WithDefault<boolean>;
    overlayOpacity: import("vue-class-component").WithDefault<string | number>;
    zIndex: import("vue-class-component").WithDefault<string | number>;
}
declare const VaModal_base: import("vue-class-component").VueConstructor<ColorMixin & StatefulMixin & ClickOutsideMixin & {
    $: import("vue").ComponentInternalInstance;
    $data: {};
    $props: Partial<{}> & Omit<import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, never>;
    $attrs: {
        [x: string]: unknown;
    };
    $refs: {
        [x: string]: unknown;
    };
    $slots: Readonly<{
        [name: string]: import("vue").Slot | undefined;
    }>;
    $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $emit: (event: string, ...args: any[]) => void;
    $el: any;
    $options: import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>;
    $forceUpdate: import("vue").ReactiveEffect<any>;
    $nextTick: typeof import("vue").nextTick;
    $watch(source: string | Function, cb: Function, options?: import("vue").WatchOptions<boolean> | undefined): import("vue").WatchStopHandle;
} & import("vue").ShallowUnwrapRef<{}> & {} & {} & import("vue").ComponentCustomProperties & import("vue-class-component").ClassComponentHooks & {
    $: import("vue").ComponentInternalInstance;
    $data: {};
    $props: Partial<import("vue-class-component").ExtractDefaultProps<ModalProps>> & Omit<import("vue-class-component").ExtractProps<ModalProps> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, import("vue-class-component").DefaultKeys<ModalProps>>;
    $attrs: {
        [x: string]: unknown;
    };
    $refs: {
        [x: string]: unknown;
    };
    $slots: Readonly<{
        [name: string]: import("vue").Slot | undefined;
    }>;
    $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $emit: (event: string, ...args: any[]) => void;
    $el: any;
    $options: import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>;
    $forceUpdate: import("vue").ReactiveEffect<any>;
    $nextTick: typeof import("vue").nextTick;
    $watch(source: string | Function, cb: Function, options?: import("vue").WatchOptions<boolean> | undefined): import("vue").WatchStopHandle;
} & import("vue-class-component").ExtractProps<ModalProps>>;
export default class VaModal extends VaModal_base {
    private clearClickOutsideEvents;
    created(): void;
    get computedClass(): {
        [x: string]: boolean | undefined;
        'va-modal--fullscreen': boolean | undefined;
        'va-modal--mobile-fullscreen': boolean | undefined;
        'va-modal--fixed-layout': boolean | undefined;
    };
    get computedOverlayStyles(): {
        'background-color'?: undefined;
        'z-index'?: undefined;
    } | {
        'background-color': string;
        'z-index': number | undefined;
    };
    get computedModalContainerStyle(): {
        'z-index': string | number | undefined;
    };
    get hasContentSlot(): import("vue").Slot | undefined;
    get hasHeaderSlot(): import("vue").Slot | undefined;
    get hasFooterSlot(): import("vue").Slot | undefined;
    show(): void;
    hide(): void;
    toggle(): void;
    cancel(): void;
    ok(): void;
    listenKeyUp(e: KeyboardEvent): void;
    onBeforeEnterTransition(el: HTMLElement): void;
    onAfterEnterTransition(el: HTMLElement): void;
    onBeforeLeaveTransition(el: HTMLElement): void;
    onAfterLeaveTransition(el: HTMLElement): void;
}
export {};
