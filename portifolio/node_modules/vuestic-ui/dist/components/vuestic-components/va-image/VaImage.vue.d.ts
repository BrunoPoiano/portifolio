declare class ImageProps {
    ratio: import("vue-class-component").WithDefault<number>;
    contain: import("vue-class-component").WithDefault<boolean>;
    src: string;
}
declare const VaImage_base: import("vue-class-component").VueConstructor<{
    $: import("@vue/runtime-core").ComponentInternalInstance;
    $data: {};
    $props: Partial<{}> & Omit<import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, never>;
    $attrs: {
        [x: string]: unknown;
    };
    $refs: {
        [x: string]: unknown;
    };
    $slots: Readonly<{
        [name: string]: import("@vue/runtime-core").Slot | undefined;
    }>;
    $root: import("@vue/runtime-core").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("@vue/runtime-core").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $parent: import("@vue/runtime-core").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("@vue/runtime-core").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $emit: (event: string, ...args: any[]) => void;
    $el: any;
    $options: import("@vue/runtime-core").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>;
    $forceUpdate: import("@vue/reactivity").ReactiveEffect<any>;
    $nextTick: typeof import("@vue/runtime-core").nextTick;
    $watch(source: string | Function, cb: Function, options?: import("@vue/runtime-core").WatchOptions<boolean> | undefined): import("@vue/runtime-core").WatchStopHandle;
} & import("@vue/reactivity").ShallowUnwrapRef<{}> & {} & {} & import("@vue/runtime-core").ComponentCustomProperties & import("vue-class-component").ClassComponentHooks & {
    $: import("@vue/runtime-core").ComponentInternalInstance;
    $data: {};
    $props: Partial<import("vue-class-component").ExtractDefaultProps<ImageProps>> & Omit<import("vue-class-component").ExtractProps<ImageProps> & import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, import("vue-class-component").DefaultKeys<ImageProps>>;
    $attrs: {
        [x: string]: unknown;
    };
    $refs: {
        [x: string]: unknown;
    };
    $slots: Readonly<{
        [name: string]: import("@vue/runtime-core").Slot | undefined;
    }>;
    $root: import("@vue/runtime-core").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("@vue/runtime-core").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $parent: import("@vue/runtime-core").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("@vue/runtime-core").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
    $emit: (event: string, ...args: any[]) => void;
    $el: any;
    $options: import("@vue/runtime-core").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>;
    $forceUpdate: import("@vue/reactivity").ReactiveEffect<any>;
    $nextTick: typeof import("@vue/runtime-core").nextTick;
    $watch(source: string | Function, cb: Function, options?: import("@vue/runtime-core").WatchOptions<boolean> | undefined): import("@vue/runtime-core").WatchStopHandle;
} & import("vue-class-component").ExtractProps<ImageProps>>;
export default class VaImage extends VaImage_base {
    loading: boolean;
    loadingError: boolean;
    created(): void;
    get imageStyles(): {
        'object-fit': string;
    };
    get paddingStyles(): {
        'padding-bottom': string;
    };
    handleLoad(): void;
    handleError(err: string): void;
}
export {};
